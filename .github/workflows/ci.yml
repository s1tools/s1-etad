name: CI

on:
  push:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

env:
  PACKAGE: s1etad

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build the package
        run: |
          python -m build
          python -m twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/*.tar.gz
            dist/*.whl

  test:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.python-version }}
    needs: build
    strategy:
      matrix:
        python-version: ["3.9", "3.13"]  #  pypy3.9
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Get distribution
        uses: actions/download-artifact@v4.1.8
        with:
          name: dist
          path: dist

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          conda-remove-defaults: "true"
          channel-priority: true
          auto-update-conda: true

      - name: Install conda dependencies
        shell: bash -el {0}
        run: |
          conda update -q --all
          # conda install -q pip numpy scipy lxml netCDF4 pandas shapely pymap3d
          conda install -q pip gdal

      - name: Install
        shell: bash -el {0}
        run: |
          VERSION=$(echo dist/*.whl | cut -d '-' -f 2)
          python -m pip install dist/${PACKAGE}-${VERSION}-py3-none-any.whl[all]

      - name: Install test dependencies
        shell: bash -el {0}
        run: |
          conda install -q pytest pytest-cov
          if [ -f tests/requirements-tests.txt ]; then \
            conda install -q --file tests/requirements-tests.txt; \
          fi

      - name: Test
        shell: bash -el {0}
        working-directory: dist
        run: |
          python -m pytest \
            --doctest-modules \
            --cov=${PACKAGE} --cov-report=html --cov-report=term \
            --pyargs ${PACKAGE} ../tests
